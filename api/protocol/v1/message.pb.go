// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.15.6
// source: api/protocol/v1/message.proto

package v1

import (
	errors "github.com/go-kratos/kratos/v2/errors"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Bind struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceType DeviceType `protobuf:"varint,1,opt,name=deviceType,proto3,enum=protocol.v1.DeviceType" json:"deviceType,omitempty"` //设备类型
	DeviceID   string     `protobuf:"bytes,2,opt,name=deviceID,proto3" json:"deviceID,omitempty"`                                  //客户端ID
	LoginType  LoginType  `protobuf:"varint,3,opt,name=loginType,proto3,enum=protocol.v1.LoginType" json:"loginType,omitempty"`    //登录类型
	CurVersion int32      `protobuf:"varint,4,opt,name=curVersion,proto3" json:"curVersion,omitempty"`                             //客户端当前协议版本
	Magic      string     `protobuf:"bytes,5,opt,name=magic,proto3" json:"magic,omitempty"`                                        //版本魔法数
	KeepAlive  uint64     `protobuf:"varint,6,opt,name=keepAlive,proto3" json:"keepAlive,omitempty"`                               //心跳超时
	QueueSize  uint32     `protobuf:"varint,7,opt,name=queueSize,proto3" json:"queueSize,omitempty"`                               //最大消息缓存池大小
}

func (x *Bind) Reset() {
	*x = Bind{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protocol_v1_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bind) ProtoMessage() {}

func (x *Bind) ProtoReflect() protoreflect.Message {
	mi := &file_api_protocol_v1_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bind.ProtoReflect.Descriptor instead.
func (*Bind) Descriptor() ([]byte, []int) {
	return file_api_protocol_v1_message_proto_rawDescGZIP(), []int{0}
}

func (x *Bind) GetDeviceType() DeviceType {
	if x != nil {
		return x.DeviceType
	}
	return DeviceType_IOS
}

func (x *Bind) GetDeviceID() string {
	if x != nil {
		return x.DeviceID
	}
	return ""
}

func (x *Bind) GetLoginType() LoginType {
	if x != nil {
		return x.LoginType
	}
	return LoginType_MANUAL
}

func (x *Bind) GetCurVersion() int32 {
	if x != nil {
		return x.CurVersion
	}
	return 0
}

func (x *Bind) GetMagic() string {
	if x != nil {
		return x.Magic
	}
	return ""
}

func (x *Bind) GetKeepAlive() uint64 {
	if x != nil {
		return x.KeepAlive
	}
	return 0
}

func (x *Bind) GetQueueSize() uint32 {
	if x != nil {
		return x.QueueSize
	}
	return 0
}

type BindAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BindRet         bool           `protobuf:"varint,1,opt,name=bindRet,proto3" json:"bindRet,omitempty"`                 //响应码
	ServerTimeStamp uint64         `protobuf:"varint,2,opt,name=serverTimeStamp,proto3" json:"serverTimeStamp,omitempty"` //服务器时间戳
	Err             *errors.Status `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`                          //kratos通用错误
}

func (x *BindAck) Reset() {
	*x = BindAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protocol_v1_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindAck) ProtoMessage() {}

func (x *BindAck) ProtoReflect() protoreflect.Message {
	mi := &file_api_protocol_v1_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindAck.ProtoReflect.Descriptor instead.
func (*BindAck) Descriptor() ([]byte, []int) {
	return file_api_protocol_v1_message_proto_rawDescGZIP(), []int{1}
}

func (x *BindAck) GetBindRet() bool {
	if x != nil {
		return x.BindRet
	}
	return false
}

func (x *BindAck) GetServerTimeStamp() uint64 {
	if x != nil {
		return x.ServerTimeStamp
	}
	return 0
}

func (x *BindAck) GetErr() *errors.Status {
	if x != nil {
		return x.Err
	}
	return nil
}

type Auth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleType RoleType `protobuf:"varint,1,opt,name=roleType,proto3,enum=protocol.v1.RoleType" json:"roleType,omitempty"` //角色类型
	Token    string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`                                  //验证token
	Sequence uint64   `protobuf:"varint,3,opt,name=sequence,proto3" json:"sequence,omitempty"`                           //客户端当前消息序列号
}

func (x *Auth) Reset() {
	*x = Auth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protocol_v1_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Auth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth) ProtoMessage() {}

func (x *Auth) ProtoReflect() protoreflect.Message {
	mi := &file_api_protocol_v1_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth.ProtoReflect.Descriptor instead.
func (*Auth) Descriptor() ([]byte, []int) {
	return file_api_protocol_v1_message_proto_rawDescGZIP(), []int{2}
}

func (x *Auth) GetRoleType() RoleType {
	if x != nil {
		return x.RoleType
	}
	return RoleType_ROLE_NORMAL
}

func (x *Auth) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *Auth) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

type AuthAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthRet bool           `protobuf:"varint,1,opt,name=authRet,proto3" json:"authRet,omitempty"` //响应码
	UID     string         `protobuf:"bytes,2,opt,name=UID,proto3" json:"UID,omitempty"`          //用户ID
	Err     *errors.Status `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`          //kratos通用错误
}

func (x *AuthAck) Reset() {
	*x = AuthAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protocol_v1_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthAck) ProtoMessage() {}

func (x *AuthAck) ProtoReflect() protoreflect.Message {
	mi := &file_api_protocol_v1_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthAck.ProtoReflect.Descriptor instead.
func (*AuthAck) Descriptor() ([]byte, []int) {
	return file_api_protocol_v1_message_proto_rawDescGZIP(), []int{3}
}

func (x *AuthAck) GetAuthRet() bool {
	if x != nil {
		return x.AuthRet
	}
	return false
}

func (x *AuthAck) GetUID() string {
	if x != nil {
		return x.UID
	}
	return ""
}

func (x *AuthAck) GetErr() *errors.Status {
	if x != nil {
		return x.Err
	}
	return nil
}

type Sync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        uint32     `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`               //同步会话标识ID,单次连接会话中有效
	SessionID uint64     `protobuf:"varint,2,opt,name=sessionID,proto3" json:"sessionID,omitempty"` //服务端会话ID，客户端参考使用，可取任意一条消息获取消息收发端状态
	Total     int32      `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`         //未读数统计
	Delivers  []*Deliver `protobuf:"bytes,4,rep,name=delivers,proto3" json:"delivers,omitempty"`    //消息数组
}

func (x *Sync) Reset() {
	*x = Sync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protocol_v1_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sync) ProtoMessage() {}

func (x *Sync) ProtoReflect() protoreflect.Message {
	mi := &file_api_protocol_v1_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sync.ProtoReflect.Descriptor instead.
func (*Sync) Descriptor() ([]byte, []int) {
	return file_api_protocol_v1_message_proto_rawDescGZIP(), []int{4}
}

func (x *Sync) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Sync) GetSessionID() uint64 {
	if x != nil {
		return x.SessionID
	}
	return 0
}

func (x *Sync) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Sync) GetDelivers() []*Deliver {
	if x != nil {
		return x.Delivers
	}
	return nil
}

type SyncAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"` //与syncID一一对应
}

func (x *SyncAck) Reset() {
	*x = SyncAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protocol_v1_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncAck) ProtoMessage() {}

func (x *SyncAck) ProtoReflect() protoreflect.Message {
	mi := &file_api_protocol_v1_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncAck.ProtoReflect.Descriptor instead.
func (*SyncAck) Descriptor() ([]byte, []int) {
	return file_api_protocol_v1_message_proto_rawDescGZIP(), []int{5}
}

func (x *SyncAck) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type SyncConfirm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SyncConfirm) Reset() {
	*x = SyncConfirm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protocol_v1_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncConfirm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncConfirm) ProtoMessage() {}

func (x *SyncConfirm) ProtoReflect() protoreflect.Message {
	mi := &file_api_protocol_v1_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncConfirm.ProtoReflect.Descriptor instead.
func (*SyncConfirm) Descriptor() ([]byte, []int) {
	return file_api_protocol_v1_message_proto_rawDescGZIP(), []int{6}
}

type SubmitOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roam          bool `protobuf:"varint,1,opt,name=roam,proto3" json:"roam,omitempty"`                   //漫游
	History       bool `protobuf:"varint,2,opt,name=history,proto3" json:"history,omitempty"`             //保存历史
	Sync          bool `protobuf:"varint,3,opt,name=sync,proto3" json:"sync,omitempty"`                   //发送端多端同步
	Notify        bool `protobuf:"varint,4,opt,name=notify,proto3" json:"notify,omitempty"`               //需要离线通知
	Badge         bool `protobuf:"varint,5,opt,name=badge,proto3" json:"badge,omitempty"`                 //离线通知是否需要计数
	Persistent    bool `protobuf:"varint,6,opt,name=persistent,proto3" json:"persistent,omitempty"`       //离线是否需要持久化
	SessionUpdate bool `protobuf:"varint,7,opt,name=sessionUpdate,proto3" json:"sessionUpdate,omitempty"` //更新会话最后一条消息
	MarkRead      bool `protobuf:"varint,8,opt,name=markRead,proto3" json:"markRead,omitempty"`           //是否需要阅读标记
	CheckFriend   bool `protobuf:"varint,9,opt,name=checkFriend,proto3" json:"checkFriend,omitempty"`     //是否需要检查好友关系
}

func (x *SubmitOption) Reset() {
	*x = SubmitOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protocol_v1_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitOption) ProtoMessage() {}

func (x *SubmitOption) ProtoReflect() protoreflect.Message {
	mi := &file_api_protocol_v1_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitOption.ProtoReflect.Descriptor instead.
func (*SubmitOption) Descriptor() ([]byte, []int) {
	return file_api_protocol_v1_message_proto_rawDescGZIP(), []int{7}
}

func (x *SubmitOption) GetRoam() bool {
	if x != nil {
		return x.Roam
	}
	return false
}

func (x *SubmitOption) GetHistory() bool {
	if x != nil {
		return x.History
	}
	return false
}

func (x *SubmitOption) GetSync() bool {
	if x != nil {
		return x.Sync
	}
	return false
}

func (x *SubmitOption) GetNotify() bool {
	if x != nil {
		return x.Notify
	}
	return false
}

func (x *SubmitOption) GetBadge() bool {
	if x != nil {
		return x.Badge
	}
	return false
}

func (x *SubmitOption) GetPersistent() bool {
	if x != nil {
		return x.Persistent
	}
	return false
}

func (x *SubmitOption) GetSessionUpdate() bool {
	if x != nil {
		return x.SessionUpdate
	}
	return false
}

func (x *SubmitOption) GetMarkRead() bool {
	if x != nil {
		return x.MarkRead
	}
	return false
}

func (x *SubmitOption) GetCheckFriend() bool {
	if x != nil {
		return x.CheckFriend
	}
	return false
}

type Submit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            uint32        `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`                                    //消息唯一标识
	Dup           bool          `protobuf:"varint,2,opt,name=dup,proto3" json:"dup,omitempty"`                                  //重发标识
	To            string        `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`                                     //接收者
	ToType        UserType      `protobuf:"varint,4,opt,name=toType,proto3,enum=protocol.v1.UserType" json:"toType,omitempty"`  //接受者类型
	MsgType       MsgType       `protobuf:"varint,5,opt,name=msgType,proto3,enum=protocol.v1.MsgType" json:"msgType,omitempty"` //消息类型
	Payload       []byte        `protobuf:"bytes,6,opt,name=payload,proto3" json:"payload,omitempty"`                           //消息正文
	Ats           []string      `protobuf:"bytes,7,rep,name=ats,proto3" json:"ats,omitempty"`                                   //@列表
	AtAll         bool          `protobuf:"varint,8,opt,name=atAll,proto3" json:"atAll,omitempty"`                              //是否为@all，为true时，ats不再生效
	NotifyContent string        `protobuf:"bytes,9,opt,name=notifyContent,proto3" json:"notifyContent,omitempty"`               //自定义通知正文
	Option        *SubmitOption `protobuf:"bytes,10,opt,name=option,proto3" json:"option,omitempty"`                            //发送选项参数设定
}

func (x *Submit) Reset() {
	*x = Submit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protocol_v1_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Submit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Submit) ProtoMessage() {}

func (x *Submit) ProtoReflect() protoreflect.Message {
	mi := &file_api_protocol_v1_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Submit.ProtoReflect.Descriptor instead.
func (*Submit) Descriptor() ([]byte, []int) {
	return file_api_protocol_v1_message_proto_rawDescGZIP(), []int{8}
}

func (x *Submit) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Submit) GetDup() bool {
	if x != nil {
		return x.Dup
	}
	return false
}

func (x *Submit) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Submit) GetToType() UserType {
	if x != nil {
		return x.ToType
	}
	return UserType_USER_NORMAL
}

func (x *Submit) GetMsgType() MsgType {
	if x != nil {
		return x.MsgType
	}
	return MsgType_MSG_SINGLE
}

func (x *Submit) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Submit) GetAts() []string {
	if x != nil {
		return x.Ats
	}
	return nil
}

func (x *Submit) GetAtAll() bool {
	if x != nil {
		return x.AtAll
	}
	return false
}

func (x *Submit) GetNotifyContent() string {
	if x != nil {
		return x.NotifyContent
	}
	return ""
}

func (x *Submit) GetOption() *SubmitOption {
	if x != nil {
		return x.Option
	}
	return nil
}

type SubmitAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmitRet bool           `protobuf:"varint,1,opt,name=submitRet,proto3" json:"submitRet,omitempty"` //响应标识
	ID        uint32         `protobuf:"varint,2,opt,name=ID,proto3" json:"ID,omitempty"`               //消息唯一标识,一一对应Sumit中id字段, 1-65535，会话期间循环使用，并且在短时间有效时间内（如10分钟）服务端做去重使用
	Sequence  uint64         `protobuf:"varint,3,opt,name=sequence,proto3" json:"sequence,omitempty"`   //CHATROOM APPLICATION类型每一个会话独享，SINGLE、GROUP共享
	SessionID uint64         `protobuf:"varint,4,opt,name=sessionID,proto3" json:"sessionID,omitempty"` //服务端会话标识，客户端参考使用
	Timestamp uint64         `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"` //服务端时间戳
	Err       *errors.Status `protobuf:"bytes,6,opt,name=err,proto3" json:"err,omitempty"`              //kratos通用错误
}

func (x *SubmitAck) Reset() {
	*x = SubmitAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protocol_v1_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitAck) ProtoMessage() {}

func (x *SubmitAck) ProtoReflect() protoreflect.Message {
	mi := &file_api_protocol_v1_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitAck.ProtoReflect.Descriptor instead.
func (*SubmitAck) Descriptor() ([]byte, []int) {
	return file_api_protocol_v1_message_proto_rawDescGZIP(), []int{9}
}

func (x *SubmitAck) GetSubmitRet() bool {
	if x != nil {
		return x.SubmitRet
	}
	return false
}

func (x *SubmitAck) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *SubmitAck) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *SubmitAck) GetSessionID() uint64 {
	if x != nil {
		return x.SessionID
	}
	return 0
}

func (x *SubmitAck) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *SubmitAck) GetErr() *errors.Status {
	if x != nil {
		return x.Err
	}
	return nil
}

type Deliver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sequence     uint64   `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`                           //消息序列号
	SessionID    uint64   `protobuf:"varint,2,opt,name=sessionID,proto3" json:"sessionID,omitempty"`                         //会话ID，客户端参考使用
	From         string   `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`                                    //发送者
	FromType     UserType `protobuf:"varint,4,opt,name=fromType,proto3,enum=protocol.v1.UserType" json:"fromType,omitempty"` //发送者类型
	To           string   `protobuf:"bytes,5,opt,name=to,proto3" json:"to,omitempty"`                                        //接收者
	ToType       UserType `protobuf:"varint,6,opt,name=toType,proto3,enum=protocol.v1.UserType" json:"toType,omitempty"`     //接收者类型
	MsgType      MsgType  `protobuf:"varint,7,opt,name=msgType,proto3,enum=protocol.v1.MsgType" json:"msgType,omitempty"`    //消息类型
	Payload      []byte   `protobuf:"bytes,8,opt,name=payload,proto3" json:"payload,omitempty"`                              //消息负载，内包含json类型的消息业务类型
	SendTime     uint64   `protobuf:"varint,9,opt,name=sendTime,proto3" json:"sendTime,omitempty"`                           //发送时间
	EditTime     uint64   `protobuf:"varint,10,opt,name=editTime,proto3" json:"editTime,omitempty"`                          //编辑时间
	DeleteTime   uint64   `protobuf:"varint,11,opt,name=deleteTime,proto3" json:"deleteTime,omitempty"`                      //删除时间戳
	LastReadtime uint64   `protobuf:"varint,12,opt,name=lastReadtime,proto3" json:"lastReadtime,omitempty"`                  //最后阅读时间
}

func (x *Deliver) Reset() {
	*x = Deliver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protocol_v1_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deliver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deliver) ProtoMessage() {}

func (x *Deliver) ProtoReflect() protoreflect.Message {
	mi := &file_api_protocol_v1_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deliver.ProtoReflect.Descriptor instead.
func (*Deliver) Descriptor() ([]byte, []int) {
	return file_api_protocol_v1_message_proto_rawDescGZIP(), []int{10}
}

func (x *Deliver) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *Deliver) GetSessionID() uint64 {
	if x != nil {
		return x.SessionID
	}
	return 0
}

func (x *Deliver) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Deliver) GetFromType() UserType {
	if x != nil {
		return x.FromType
	}
	return UserType_USER_NORMAL
}

func (x *Deliver) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Deliver) GetToType() UserType {
	if x != nil {
		return x.ToType
	}
	return UserType_USER_NORMAL
}

func (x *Deliver) GetMsgType() MsgType {
	if x != nil {
		return x.MsgType
	}
	return MsgType_MSG_SINGLE
}

func (x *Deliver) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Deliver) GetSendTime() uint64 {
	if x != nil {
		return x.SendTime
	}
	return 0
}

func (x *Deliver) GetEditTime() uint64 {
	if x != nil {
		return x.EditTime
	}
	return 0
}

func (x *Deliver) GetDeleteTime() uint64 {
	if x != nil {
		return x.DeleteTime
	}
	return 0
}

func (x *Deliver) GetLastReadtime() uint64 {
	if x != nil {
		return x.LastReadtime
	}
	return 0
}

type DeliverAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeliverRet bool           `protobuf:"varint,1,opt,name=deliverRet,proto3" json:"deliverRet,omitempty"` //响应结果标识
	SessionID  uint64         `protobuf:"varint,2,opt,name=sessionID,proto3" json:"sessionID,omitempty"`   //会话ID，客户端参考使用
	Sequence   uint64         `protobuf:"varint,3,opt,name=sequence,proto3" json:"sequence,omitempty"`     //消息序列号
	Err        *errors.Status `protobuf:"bytes,6,opt,name=err,proto3" json:"err,omitempty"`                //kratos通用错误
}

func (x *DeliverAck) Reset() {
	*x = DeliverAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protocol_v1_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliverAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliverAck) ProtoMessage() {}

func (x *DeliverAck) ProtoReflect() protoreflect.Message {
	mi := &file_api_protocol_v1_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliverAck.ProtoReflect.Descriptor instead.
func (*DeliverAck) Descriptor() ([]byte, []int) {
	return file_api_protocol_v1_message_proto_rawDescGZIP(), []int{11}
}

func (x *DeliverAck) GetDeliverRet() bool {
	if x != nil {
		return x.DeliverRet
	}
	return false
}

func (x *DeliverAck) GetSessionID() uint64 {
	if x != nil {
		return x.SessionID
	}
	return 0
}

func (x *DeliverAck) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *DeliverAck) GetErr() *errors.Status {
	if x != nil {
		return x.Err
	}
	return nil
}

type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`          //同submit id释义
	Dup     bool   `protobuf:"varint,2,opt,name=dup,proto3" json:"dup,omitempty"`        //重复标识
	Payload []byte `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"` //负载
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protocol_v1_message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_api_protocol_v1_message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_api_protocol_v1_message_proto_rawDescGZIP(), []int{12}
}

func (x *Action) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Action) GetDup() bool {
	if x != nil {
		return x.Dup
	}
	return false
}

func (x *Action) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type ActionAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionRet bool           `protobuf:"varint,1,opt,name=actionRet,proto3" json:"actionRet,omitempty"` //响应结果标识
	ID        uint32         `protobuf:"varint,2,opt,name=ID,proto3" json:"ID,omitempty"`               //与Action结构，id字段一一对应
	Timestamp uint64         `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"` //服务端时间戳，客户端发送则忽略
	Payload   []byte         `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`      //负载
	Err       *errors.Status `protobuf:"bytes,6,opt,name=err,proto3" json:"err,omitempty"`              //kratos通用错误
}

func (x *ActionAck) Reset() {
	*x = ActionAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protocol_v1_message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionAck) ProtoMessage() {}

func (x *ActionAck) ProtoReflect() protoreflect.Message {
	mi := &file_api_protocol_v1_message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionAck.ProtoReflect.Descriptor instead.
func (*ActionAck) Descriptor() ([]byte, []int) {
	return file_api_protocol_v1_message_proto_rawDescGZIP(), []int{13}
}

func (x *ActionAck) GetActionRet() bool {
	if x != nil {
		return x.ActionRet
	}
	return false
}

func (x *ActionAck) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *ActionAck) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ActionAck) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ActionAck) GetErr() *errors.Status {
	if x != nil {
		return x.Err
	}
	return nil
}

type Ping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Ping) Reset() {
	*x = Ping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protocol_v1_message_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping) ProtoMessage() {}

func (x *Ping) ProtoReflect() protoreflect.Message {
	mi := &file_api_protocol_v1_message_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ping.ProtoReflect.Descriptor instead.
func (*Ping) Descriptor() ([]byte, []int) {
	return file_api_protocol_v1_message_proto_rawDescGZIP(), []int{14}
}

type Pong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Pong) Reset() {
	*x = Pong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protocol_v1_message_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pong) ProtoMessage() {}

func (x *Pong) ProtoReflect() protoreflect.Message {
	mi := &file_api_protocol_v1_message_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pong.ProtoReflect.Descriptor instead.
func (*Pong) Descriptor() ([]byte, []int) {
	return file_api_protocol_v1_message_proto_rawDescGZIP(), []int{15}
}

type Quit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Quit) Reset() {
	*x = Quit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protocol_v1_message_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Quit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quit) ProtoMessage() {}

func (x *Quit) ProtoReflect() protoreflect.Message {
	mi := &file_api_protocol_v1_message_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quit.ProtoReflect.Descriptor instead.
func (*Quit) Descriptor() ([]byte, []int) {
	return file_api_protocol_v1_message_proto_rawDescGZIP(), []int{16}
}

var File_api_protocol_v1_message_proto protoreflect.FileDescriptor

var file_api_protocol_v1_message_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x76,
	0x31, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x61, 0x70,
	0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x83, 0x02, 0x0a, 0x04, 0x42, 0x69, 0x6e, 0x64, 0x12, 0x37, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12, 0x34, 0x0a,
	0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x65,
	0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6b, 0x65,
	0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x6f, 0x0a, 0x07, 0x42, 0x69, 0x6e, 0x64, 0x41, 0x63, 0x6b,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x62, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x20, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x6b, 0x0a, 0x04, 0x41, 0x75, 0x74, 0x68, 0x12, 0x31,
	0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x22, 0x57, 0x0a, 0x07, 0x41, 0x75, 0x74, 0x68, 0x41, 0x63, 0x6b, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x03, 0x65, 0x72,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x7c, 0x0a, 0x04,
	0x53, 0x79, 0x6e, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x08, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x52, 0x08, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x73, 0x22, 0x19, 0x0a, 0x07, 0x53, 0x79,
	0x6e, 0x63, 0x41, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x49, 0x44, 0x22, 0x0d, 0x0a, 0x0b, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x22, 0x82, 0x02, 0x0a, 0x0c, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x61, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x72, 0x6f, 0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x73, 0x79, 0x6e, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x73, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x61, 0x72, 0x6b, 0x52, 0x65, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6d,
	0x61, 0x72, 0x6b, 0x52, 0x65, 0x61, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x22, 0xb4, 0x02, 0x0a, 0x06, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x03, 0x64, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x2d, 0x0a, 0x06, 0x74, 0x6f, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x74,
	0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6d, 0x73,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x61, 0x74,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x74, 0x41, 0x6c, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x61, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x0a,
	0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xb3, 0x01, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x41, 0x63, 0x6b, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x20, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x8f, 0x03, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x12, 0x31, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x74, 0x6f, 0x12, 0x2d, 0x0a, 0x06, 0x74, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x74, 0x6f, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x64, 0x69, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x65, 0x64, 0x69, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x61, 0x64,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74,
	0x52, 0x65, 0x61, 0x64, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x41, 0x63, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x20, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x22, 0x44, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x10, 0x0a,
	0x03, 0x64, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x64, 0x75, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x93, 0x01, 0x0a, 0x09, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x20, 0x0a,
	0x03, 0x65, 0x72, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22,
	0x06, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x22, 0x06, 0x0a, 0x04, 0x50, 0x6f, 0x6e, 0x67, 0x22,
	0x06, 0x0a, 0x04, 0x51, 0x75, 0x69, 0x74, 0x42, 0x38, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x1a, 0x78, 0x68, 0x61, 0x70, 0x70, 0x65,
	0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x76,
	0x31, 0x3b, 0x76, 0x31, 0xa2, 0x02, 0x0a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_protocol_v1_message_proto_rawDescOnce sync.Once
	file_api_protocol_v1_message_proto_rawDescData = file_api_protocol_v1_message_proto_rawDesc
)

func file_api_protocol_v1_message_proto_rawDescGZIP() []byte {
	file_api_protocol_v1_message_proto_rawDescOnce.Do(func() {
		file_api_protocol_v1_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_protocol_v1_message_proto_rawDescData)
	})
	return file_api_protocol_v1_message_proto_rawDescData
}

var file_api_protocol_v1_message_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_api_protocol_v1_message_proto_goTypes = []interface{}{
	(*Bind)(nil),          // 0: protocol.v1.Bind
	(*BindAck)(nil),       // 1: protocol.v1.BindAck
	(*Auth)(nil),          // 2: protocol.v1.Auth
	(*AuthAck)(nil),       // 3: protocol.v1.AuthAck
	(*Sync)(nil),          // 4: protocol.v1.Sync
	(*SyncAck)(nil),       // 5: protocol.v1.SyncAck
	(*SyncConfirm)(nil),   // 6: protocol.v1.SyncConfirm
	(*SubmitOption)(nil),  // 7: protocol.v1.SubmitOption
	(*Submit)(nil),        // 8: protocol.v1.Submit
	(*SubmitAck)(nil),     // 9: protocol.v1.SubmitAck
	(*Deliver)(nil),       // 10: protocol.v1.Deliver
	(*DeliverAck)(nil),    // 11: protocol.v1.DeliverAck
	(*Action)(nil),        // 12: protocol.v1.Action
	(*ActionAck)(nil),     // 13: protocol.v1.ActionAck
	(*Ping)(nil),          // 14: protocol.v1.Ping
	(*Pong)(nil),          // 15: protocol.v1.Pong
	(*Quit)(nil),          // 16: protocol.v1.Quit
	(DeviceType)(0),       // 17: protocol.v1.DeviceType
	(LoginType)(0),        // 18: protocol.v1.LoginType
	(*errors.Status)(nil), // 19: errors.Status
	(RoleType)(0),         // 20: protocol.v1.RoleType
	(UserType)(0),         // 21: protocol.v1.UserType
	(MsgType)(0),          // 22: protocol.v1.MsgType
}
var file_api_protocol_v1_message_proto_depIdxs = []int32{
	17, // 0: protocol.v1.Bind.deviceType:type_name -> protocol.v1.DeviceType
	18, // 1: protocol.v1.Bind.loginType:type_name -> protocol.v1.LoginType
	19, // 2: protocol.v1.BindAck.err:type_name -> errors.Status
	20, // 3: protocol.v1.Auth.roleType:type_name -> protocol.v1.RoleType
	19, // 4: protocol.v1.AuthAck.err:type_name -> errors.Status
	10, // 5: protocol.v1.Sync.delivers:type_name -> protocol.v1.Deliver
	21, // 6: protocol.v1.Submit.toType:type_name -> protocol.v1.UserType
	22, // 7: protocol.v1.Submit.msgType:type_name -> protocol.v1.MsgType
	7,  // 8: protocol.v1.Submit.option:type_name -> protocol.v1.SubmitOption
	19, // 9: protocol.v1.SubmitAck.err:type_name -> errors.Status
	21, // 10: protocol.v1.Deliver.fromType:type_name -> protocol.v1.UserType
	21, // 11: protocol.v1.Deliver.toType:type_name -> protocol.v1.UserType
	22, // 12: protocol.v1.Deliver.msgType:type_name -> protocol.v1.MsgType
	19, // 13: protocol.v1.DeliverAck.err:type_name -> errors.Status
	19, // 14: protocol.v1.ActionAck.err:type_name -> errors.Status
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_api_protocol_v1_message_proto_init() }
func file_api_protocol_v1_message_proto_init() {
	if File_api_protocol_v1_message_proto != nil {
		return
	}
	file_api_protocol_v1_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_protocol_v1_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bind); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protocol_v1_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protocol_v1_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Auth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protocol_v1_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protocol_v1_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protocol_v1_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protocol_v1_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncConfirm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protocol_v1_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protocol_v1_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Submit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protocol_v1_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protocol_v1_message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deliver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protocol_v1_message_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliverAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protocol_v1_message_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protocol_v1_message_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protocol_v1_message_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protocol_v1_message_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protocol_v1_message_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Quit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_protocol_v1_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_protocol_v1_message_proto_goTypes,
		DependencyIndexes: file_api_protocol_v1_message_proto_depIdxs,
		MessageInfos:      file_api_protocol_v1_message_proto_msgTypes,
	}.Build()
	File_api_protocol_v1_message_proto = out.File
	file_api_protocol_v1_message_proto_rawDesc = nil
	file_api_protocol_v1_message_proto_goTypes = nil
	file_api_protocol_v1_message_proto_depIdxs = nil
}
