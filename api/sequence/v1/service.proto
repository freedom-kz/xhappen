syntax = "proto3";

package sequence.v1;

import "errors/errors.proto";

option go_package = "xhappen/api/sequence/v1;v1";
option java_multiple_files = true;
option java_package = "sequence.v1";
option objc_class_prefix = "SequenceV1";

service Sequence {
    //批量获取用户消息序列号（生产消费序列号）
    rpc GenSequenceByUserIds (GenSequenceByUserIdsRequest) returns (GenSequenceByUserIdsReply)  {}
    
    //批量获取用户当前序列号（获取当前序列号）
    rpc GetCurrentSequenceByUserIds (GetCurrentSequenceByUserIdsRequest) returns (GetCurrentSequenceByUserIdsReply)  {}
    
    //批量获取房间消息序列号（生产房间消息序列号）
    rpc GenRoomSequenceByRoomIds (GenRoomSequenceByRoomIdsRequest) returns (GenRoomSequenceByRoomIdsReply)  {}
    
    //批量获取房间当前消息序列号（获取房间当前消息序列号）
    rpc GetCurrentRoomSequenceByRoomIds (GetCurrentSequenceByRoomIdsRequest) returns (GetCurrentSequenceByRoomIdsReply)  {}
}

message GenSequenceByUserIdsRequest {
    repeated string ID = 1 [json_name = "id"];
}

message GenSequenceByUserIdsReply {
    bool ret = 1 [json_name = "ret"];
    map<uint64,uint64> IDs = 2 [json_name = "ids"];
    errors.Status err = 3 [json_name = "err"];          //kratos通用错误
}

message GetCurrentSequenceByUserIdsRequest {
    repeated string ID = 1 [json_name = "id"];
}
  
message GetCurrentSequenceByUserIdsReply {
    bool ret = 1 [json_name = "ret"];
    map<uint64,uint64> IDs = 2 [json_name = "ids"];
    errors.Status err = 3 [json_name = "err"];          //kratos通用错误
}

message GenRoomSequenceByRoomIdsRequest {
    repeated string ID = 1 [json_name = "id"];
}

message GenRoomSequenceByRoomIdsReply {
    bool ret = 1 [json_name = "ret"];
    map<uint64,uint64> IDs = 2 [json_name = "ids"];
    errors.Status err = 3 [json_name = "err"];          //kratos通用错误
}

message GetCurrentSequenceByRoomIdsRequest {
    repeated string ID = 1 [json_name = "id"];
}

message GetCurrentSequenceByRoomIdsReply {
    bool ret = 1 [json_name = "ret"];
    map<uint64,uint64> IDs = 2 [json_name = "ids"];
    errors.Status err = 3 [json_name = "err"];          //kratos通用错误
}
