syntax = "proto3";

package portal.v1;

import "google/api/annotations.proto";
import "validate/validate.proto";
import "errors/errors.proto";
import "google/protobuf/timestamp.proto";
import "api/basic/v1/basic.proto";
import "api/protocol/v1/common.proto";

option go_package = "xhappen/api/portal/v1;v1";
option java_multiple_files = true;
option java_package = "portal.v1";
option objc_class_prefix = "PortalV1";

service User {
  // mobile login
  rpc LoginByMobile (LoginByMobileRequest) returns (LoginByMobileReply)  {
        option (google.api.http) = {
          post: "/user/login",
          body: "*",
        };
  }

  //token auth
  rpc TokenAuth (TokenAuthRequest) returns (TokenAuthReply)  {}

  // mobile login
  rpc Logout (LogoutRequest) returns (LogoutReply)  {
        option (google.api.http) = {
          post: "/auth/user/logout",
          body: "*",
        };
  }

  // mobile login
  rpc DeRegister (DeRegisterRequest) returns (DeRegisterReply)  {
        option (google.api.http) = {
          post: "/auth/user/deregister",
          body: "*",
        };
  }

  // get user profile
  rpc GetUserProfile (GetUserProfileRequest) returns (GetUserProfileReply)  {
        option (google.api.http) = {
          post: "/user/getprofile",
          body: "*",
        };
  }
  // get self profile
  rpc GetSelfProfile (GetSelfProfileRequest) returns (GetSelfProfileReply)  {
        option (google.api.http) = {
          post: "/auth/user/getselfprofile",
          body: "*",
        };
  }

  // update profile
  rpc UpdateProfile (UpdateProfileRequest) returns (UpdateProfileReply)  {
        option (google.api.http) = {
          post: "/auth/user/updateprofile",
          body: "*",
        };
  }
}

message LoginByMobileRequest {
  string mobile = 1 [json_name = "mobile", (validate.rules).string = {
    pattern: "^1(3\\d|4[0-14-9]|5[0-35-9]|6[2567]|7[0-8]|8\\d|9[0-35-9])\\d{8}$",
    len: 11, 
  }];
  string deviceID = 2 [json_name = "device_id", (validate.rules).string = {
    min_len: 24, 
    max_len: 36
  }];
  string smsCode = 3 [json_name = "sms_code", (validate.rules).string = {
    pattern: "^\\d{6}$",
    len: 6, 
  }];
}

message LoginByMobileReply {
  string token = 1 [json_name = "token"];
  basic.v1.User user = 2 [json_name = "user"];
}

message TokenAuthRequest {
  string token = 1 [json_name = "token"];
  string deviceID = 2 [json_name = "device_id"];
  protocol.v1.RoleType roleType = 3 [json_name = "role_type"];
}

message TokenAuthReply {
  bool ret = 1 [json_name = "ret"];
  string deviceID = 2 [json_name = "device_id"];
  string userID = 3 [json_name = "user_id"]; 
  google.protobuf.Timestamp tokenExpire = 4 [json_name = "token_expire"];
  protocol.v1.UserType uType = 5 [json_name = "u_type"];
  string gwHost = 6 [json_name = "gw_host"];
  errors.Status err = 7 [json_name = "err"];          //kratos通用错误 
}

message LogoutRequest {
  
}

message LogoutReply {
  
}


message DeRegisterRequest {
  string smsCode = 1 [json_name = "sms_code"];
}

message DeRegisterReply {
  
}

message GetUserProfileRequest {
  repeated int64 IDs = 2 [json_name = "ids"];
}

message GetUserProfileReply {
  repeated basic.v1.UserProfile users = 1 [json_name = "users"];
}

message GetSelfProfileRequest {
  
}

message GetSelfProfileReply {
  basic.v1.User user = 1 [json_name = "user"];
}

message UpdateProfileRequest {
  string nickName = 1 [json_name = "nick_name"];
  string icon = 2 [json_name = "icon"];
  int32 gender = 3 [json_name = "gender"];
  string sign = 4 [json_name = "sign"];
  string birth = 5 [json_name = "birth"];
}

message UpdateProfileReply {
  basic.v1.User user = 1 [json_name = "user"];
}