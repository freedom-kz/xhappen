syntax = "proto3";

package sequence.v1;

import "errors/errors.proto";
import "api/protocol/v1/common.proto";

option go_package = "xhappen/api/router/v1;v1";
option java_multiple_files = true;
option java_package = "router.v1";
option objc_class_prefix = "RouterV1";

service Router {
  //用户设备相关操作
  rpc UserDeviceBind(UserDeviceBindRequest) returns (UserDeviceBindReply)  {}
  rpc UserDeviceUnBind(UserDeviceUnBindRequest) returns (UserDeviceUnBindReply)  {}

  //查询用户路由
  rpc GetRoutersByUserIds(RoutersByUserIdsRequest) returns (RoutersByUserIdsReply)  {}

  //房间路由相关
  rpc SaveRoomRouter(RoomRouterBindRequest) returns (RoomRouterBindReply)  {}
  rpc DeleteRoomRouter(RoomRouterUnbindRequest) returns (RoomRouterUnbindReply)  {}
  rpc GetRoomRouterByID(GetRoomRouterByIDRequest) returns (GetRoomRouterByIDReply)  {}
}

message UserDeviceBindInfo{
  uint64 UID = 1 [json_name = "uid"];
  string deviceID = 2 [json_name = "device_id"];
  string serverID = 3 [json_name = "server_id"];
  uint64 connectSequece = 4 [json_name = "connect_sequece"];
  int32 curVersion = 5 [json_name = "cur_version"];
  protocol.v1.DeviceType deviceType = 6 [json_name = "device_type"];
}

message UserDeviceBindRequest {
  UserDeviceBindInfo userDeviceBindInfo = 1 [json_name = "user_device_bind_info"];
}

message UserDeviceBindReply {
  bool ret = 1 [json_name = "ret"];
  UserDeviceBindInfo exist = 2 [json_name = "exist"];
  errors.Status err = 3 [json_name = "err"];          //kratos通用错误
}

message UserDeviceUnBindRequest {
  uint64 UID = 1 [json_name = "uid"];
  string deviceID = 2 [json_name = "device_id"];
  string serverID = 3 [json_name = "server_id"];
  uint64 connectSequece = 4 [json_name = "connect_sequece"];
}

message UserDeviceUnBindReply {
  bool ret = 1 [json_name = "ret"];
  errors.Status err = 2 [json_name = "err"];          //kratos通用错误
}

message RoutersByUserIdsRequest {
  repeated uint64 userIDs = 1 [json_name = "user_ids"];
}

message RoutersByUserIdsReply {
  message UserDeviceRouters{
    repeated UserDeviceBindInfo userDeviceBindInfos = 1 [json_name = "user_device_bind_infos"];
  }
  bool ret = 1;
  map<string, UserDeviceRouters> userDevicesRouter = 2 [json_name = "user_devices_router"]; 
  errors.Status err = 3 [json_name = "err"];          //kratos通用错误
}

message RoomRouterBindRequest {
  uint64 roomID = 1 [json_name = "room_id"];
  string serverID = 2 [json_name = "server_id"];
}

message RoomRouterBindReply {
  bool ret = 1 [json_name = "ret"];
  errors.Status err = 2 [json_name = "err"];          //kratos通用错误
}

message RoomRouterUnbindRequest {
  uint64 roomID = 1 [json_name = "room_id"];
  string serverID = 2 [json_name = "server_id"];
}

message RoomRouterUnbindReply {
  bool ret = 1 [json_name = "ret"];
  errors.Status err = 2 [json_name = "err"];          //kratos通用错误
}

message GetRoomRouterByIDRequest {
  repeated uint64 roomID = 1 [json_name = "room_id"];
}

message GetRoomRouterByIDReply {
  message RoomServers{
    repeated string serverID = 1 [json_name = "server_id"];
  }

  bool ret = 1;
  map<uint64, RoomServers> roomRouters = 2 [json_name = "room_routers"];
  errors.Status err = 3 [json_name = "err"];          //kratos通用错误
}

