syntax = "proto3";

package sequence.v1;

import "errors/errors.proto";
import "api/protocol/v1/common.proto";

option go_package = "xhappen/api/router/v1;v1";
option java_multiple_files = true;
option java_package = "router.v1";
option objc_class_prefix = "RouterV1";

service Router {
  //用户设备相关操作
  rpc UserDeviceBind(UserDeviceBindRequest) returns (UserDeviceBindReply)  {}
  rpc UserDeviceUnBind(UserDeviceUnBindRequest) returns (UserDeviceUnBindReply)  {}

  //查询用户路由
  rpc GetRoutersByUserIds(RoutersByUserIdsRequest) returns (RoutersByUserIdsReply)  {}

  //房间路由相关
  rpc SaveRoomRouter(RoomRouterBindRequest) returns (RoomRouterBindReply)  {}
  rpc DeleteRoomRouter(RoomRouterUnbindRequest) returns (RoomRouterUnbindReply)  {}
  rpc GetRoomRouterByID(GetRoomRouterByIDRequest) returns (GetRoomRouterByIDReply)  {}
}

message UserDeviceBindInfo{
  uint64 uid = 1;
  string deviceID = 2;
  string serverID = 3;
  uint64 connectSequece = 4;
  int32 curVersion = 5;
  protocol.v1.DeviceType deviceType = 6;
}

message UserDeviceBindRequest {
  UserDeviceBindInfo userDeviceBindInfo = 1;
}

message UserDeviceBindReply {
  bool ret = 1;
  UserDeviceBindInfo exist = 2;
  errors.Status err = 3;          //kratos通用错误
}

message UserDeviceUnBindRequest {
  uint64 uid = 1;
  string deviceID = 2;
  string serverID = 3;
  uint64 connectSequece = 4;
}

message UserDeviceUnBindReply {
  bool ret = 1;
  errors.Status err = 2;          //kratos通用错误
}

message RoutersByUserIdsRequest {
  repeated uint64 userIds = 1;
}

message RoutersByUserIdsReply {
  message UserDeviceRouters{
    repeated UserDeviceBindInfo userDeviceBindInfos = 1;
  }
  bool ret = 1;
  map<string, UserDeviceRouters> userDevicesRouter = 2; 
  errors.Status err = 3;          //kratos通用错误
}

message RoomRouterBindRequest {
  uint64 roomId = 1;
  string serverID = 2;
}

message RoomRouterBindReply {
  bool ret = 1;
  errors.Status err = 2;          //kratos通用错误
}

message RoomRouterUnbindRequest {
  uint64 roomId = 1;
  string serverID = 2;
}

message RoomRouterUnbindReply {
  bool ret = 1;
  errors.Status err = 2;          //kratos通用错误
}

message GetRoomRouterByIDRequest {
  repeated uint64 roomId = 1;
}

message GetRoomRouterByIDReply {
  message RoomServers{
    repeated string serverId = 1;
  }

  bool ret = 1;
  map<uint64, RoomServers> roomRouters = 2;
  errors.Status err = 3;          //kratos通用错误
}

